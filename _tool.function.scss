
// ----------------------------------------------- //
// ::: G R A N D   W A Z O O   F U N C T I O N ::: //
// ----------------------------------------------- //

// Response: calculate percentage for responsive web design
// ========================================================
// @params: target and context testUnit(15)   => 15px
// @use => width: response(350 1024); 
// @return => width: 34.17%;
// @see: http://resources.sameerast.com/responsive-web-design-formula-easy-calculator.html
@function response($param) 
{
    @if length($param) > 1 
    { 
        $target:    nth($param, 1);
        $context:   nth($param, 2);

        @return percentage( stripUnits($target) / stripUnits($context) );
    }
    @else {
        @warn "You need 2 parameters for response function";
    }
}

// !important :
// ============
//   => all functions below are only useful to mixin

// Remove unit of number
@function stripUnits($number) {
    @return $number / ($number * 0 + 1);
}


// Converted to pixel
@function toPx($number) {
    @return stripUnits($number) * 1px;
}


// Converted to REM
@function toRem($number) {
    @return stripUnits($number) / 10 + 0rem;
}


// Return number with unit px, em, %...
// ====================================
// @use: testUnit(15)   => 15px
// @use: testUnit(0)    => 0
// @use: testUnit(15em) => 15em
@function testUnit($number) 
{
    @if unit($number) == "" {
        @if $number == 0 {
            @return 0;
        }
        @else {
            @return stripUnits($number) * 1px;
        }
    }
    @else {
        @return $number;
    }
}


// Remove element in list
// ======================
// @see: http://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/
@function remove($list, $value, $recursive: false) {
  $result: ();

  @for $i from 1 through length($list) {
    @if type-of( nth($list, $i) ) == list and $recursive {
      $result: append($result, remove(nth($list, $i), $value, $recursive));
    }

    @else if nth($list, $i) != $value {
      $result: append($result, nth($list, $i));
    }
  }

  @return $result;
}